name: Python Release

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'
  workflow_dispatch:
  repository_dispatch:
    types: [core-updated]

jobs:
  build:
    runs-on: windows-latest
    permissions: write-all

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install UPX (Windows)
      run: choco install upx

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller flake8
        pip install -r core\requirements.txt

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Generate build_info.py with build number
      run: |
        echo "__version__ = '${{ github.run_number }}'" > core/build_info.py

    - name: Build with PyInstaller
      run: pyinstaller core\main.spec --clean --noconfirm

    - name: Copy config file and images
      run: |
        copy core\config.ini.example dist\smartcv\config.ini
        mkdir dist\smartcv\img
    - name: Override default config.ini settings for SmartCV-RoA2
      shell: pwsh
      run: |
        $path = "dist\smartcv\config.ini"
        (Get-Content $path) | ForEach-Object {
          if ($_ -match '^\s*executable_title\s*=') {
            "executable_title = Rivals2"
          } else {
            $_
          }
        } | Set-Content $path
    - name: Create zip file
      run: |
        cd dist\smartcv
        powershell Compress-Archive -Path * -DestinationPath ..\release.zip

    - name: Update release tag to latest commit
      run: |
        git tag -f release-${{ github.ref_name }}
        git push origin -f release-${{ github.ref_name }}

    - name: Upload binaries to release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: dist/release.zip
        tag: release-${{ github.ref_name }}
        overwrite: true