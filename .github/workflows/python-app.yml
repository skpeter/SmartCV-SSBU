name: Python Release

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest
    permissions: write-all

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller flake8
        pip install -r requirements.txt

    - name: Lint with flake8
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    # Build CPU version using CPU spec
    - name: Build CPU version with PyInstaller
      run: pyinstaller main.spec

    - name: Create zip file for CPU build
      run: |
        cd dist\smartcv
        powershell Compress-Archive -Path * -DestinationPath ..\release-cpu.zip

    # Clean build artifacts before GPU build
    - name: Clean previous build artifacts
      run: |
        if exist build (rmdir /s /q build)
        if exist dist (rmdir /s /q dist)
        if exist smartcv.spec (del smartcv.spec)

    # Build GPU version using GPU spec
    - name: Build GPU version with PyInstaller
      run: pyinstaller main-gpu.spec

    - name: Create zip file for GPU build
      run: |
        cd dist\smartcv
        powershell Compress-Archive -Path * -DestinationPath ..\release-gpu.zip

    - name: Upload CPU Release artifact
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: release-cpu.zip
        tag: ${{ github.ref }}
        overwrite: true

    - name: Upload GPU Release artifact
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: release-gpu.zip
        tag: ${{ github.ref }}
        overwrite: true